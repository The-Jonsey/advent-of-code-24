package main

import (
	"math"
	"strconv"
	"strings"
)

func indexOf(item string, list []string) int {
	for i := range list {
		if list[i] == item {
			return i
		}
	}
	return -1
}

func passesRule(first string, second string, list []string) bool {
	indexOfFirst := indexOf(first, list)
	if indexOfFirst == -1 {
		return true
	}
	indexOfSecond := indexOf(second, list)
	if indexOfSecond == -1 {
		return true
	}
	return indexOfSecond > indexOfFirst
}

func main() {
	rulesInput := "24|55\n38|32\n38|21\n48|51\n48|92\n48|14\n78|35\n78|54\n78|87\n78|44\n72|29\n72|65\n72|87\n72|82\n72|37\n23|56\n23|51\n23|81\n23|83\n23|25\n23|87\n25|14\n25|18\n25|55\n25|22\n25|15\n25|77\n25|17\n54|96\n54|65\n54|33\n54|21\n54|36\n54|29\n54|56\n54|89\n56|78\n56|88\n56|77\n56|52\n56|22\n56|81\n56|14\n56|85\n56|17\n33|23\n33|22\n33|83\n33|14\n33|89\n33|25\n33|55\n33|92\n33|72\n33|78\n96|78\n96|21\n96|14\n96|77\n96|92\n96|68\n96|88\n96|24\n96|83\n96|55\n96|91\n97|56\n97|54\n97|17\n97|43\n97|13\n97|33\n97|48\n97|96\n97|65\n97|89\n97|83\n97|37\n35|92\n35|23\n35|25\n35|52\n35|24\n35|33\n35|51\n35|21\n35|55\n35|88\n35|17\n35|56\n35|89\n52|44\n52|61\n52|88\n52|82\n52|64\n52|71\n52|51\n52|99\n52|97\n52|68\n52|85\n52|91\n52|18\n52|55\n22|43\n22|61\n22|72\n22|68\n22|15\n22|87\n22|64\n22|85\n22|97\n22|88\n22|51\n22|71\n22|18\n22|63\n22|91\n29|14\n29|81\n29|35\n29|89\n29|96\n29|21\n29|13\n29|36\n29|23\n29|65\n29|48\n29|17\n29|24\n29|52\n29|33\n29|99\n65|17\n65|15\n65|25\n65|48\n65|56\n65|22\n65|52\n65|21\n65|92\n65|23\n65|36\n65|83\n65|24\n65|55\n65|37\n65|89\n65|81\n36|77\n36|96\n36|83\n36|99\n36|56\n36|89\n36|68\n36|21\n36|55\n36|92\n36|78\n36|88\n36|51\n36|72\n36|52\n36|14\n36|24\n36|17\n32|24\n32|83\n32|13\n32|29\n32|21\n32|25\n32|92\n32|56\n32|33\n32|99\n32|96\n32|14\n32|35\n32|22\n32|88\n32|17\n32|65\n32|81\n32|37\n64|42\n64|48\n64|37\n64|96\n64|44\n64|56\n64|71\n64|76\n64|36\n64|29\n64|33\n64|23\n64|65\n64|13\n64|25\n64|38\n64|43\n64|32\n64|97\n64|54\n55|64\n55|76\n55|61\n55|43\n55|38\n55|87\n55|71\n55|72\n55|54\n55|68\n55|18\n55|67\n55|85\n55|63\n55|51\n55|78\n55|77\n55|44\n55|15\n55|97\n55|91\n43|14\n43|96\n43|32\n43|89\n43|48\n43|35\n43|23\n43|36\n43|83\n43|24\n43|33\n43|52\n43|56\n43|65\n43|13\n43|25\n43|21\n43|17\n43|54\n43|76\n43|42\n43|37\n92|85\n92|71\n92|38\n92|77\n92|64\n92|76\n92|44\n92|51\n92|63\n92|68\n92|87\n92|55\n92|88\n92|18\n92|99\n92|15\n92|72\n92|97\n92|43\n92|82\n92|61\n92|91\n92|78\n17|18\n17|81\n17|82\n17|52\n17|92\n17|77\n17|64\n17|21\n17|14\n17|68\n17|51\n17|83\n17|99\n17|24\n17|91\n17|72\n17|88\n17|15\n17|87\n17|85\n17|55\n17|22\n17|67\n17|78\n83|68\n83|77\n83|18\n83|99\n83|67\n83|51\n83|15\n83|72\n83|92\n83|22\n83|82\n83|85\n83|88\n83|63\n83|78\n83|44\n83|52\n83|24\n83|91\n83|55\n83|87\n83|61\n83|14\n83|64\n76|25\n76|14\n76|56\n76|22\n76|89\n76|23\n76|42\n76|35\n76|83\n76|29\n76|48\n76|32\n76|81\n76|33\n76|96\n76|13\n76|65\n76|21\n76|36\n76|52\n76|24\n76|17\n76|37\n76|54\n67|32\n67|71\n67|33\n67|25\n67|56\n67|97\n67|42\n67|43\n67|38\n67|37\n67|64\n67|29\n67|76\n67|35\n67|48\n67|44\n67|36\n67|82\n67|54\n67|23\n67|61\n67|63\n67|65\n67|13\n71|25\n71|48\n71|29\n71|33\n71|96\n71|42\n71|17\n71|89\n71|97\n71|35\n71|37\n71|54\n71|23\n71|43\n71|83\n71|36\n71|21\n71|13\n71|38\n71|76\n71|81\n71|65\n71|56\n71|32\n42|22\n42|35\n42|29\n42|24\n42|92\n42|36\n42|32\n42|99\n42|89\n42|14\n42|48\n42|65\n42|56\n42|17\n42|37\n42|96\n42|23\n42|25\n42|13\n42|21\n42|52\n42|81\n42|33\n42|83\n51|67\n51|78\n51|61\n51|71\n51|63\n51|97\n51|42\n51|87\n51|72\n51|77\n51|18\n51|29\n51|15\n51|64\n51|85\n51|82\n51|44\n51|43\n51|68\n51|54\n51|38\n51|76\n51|91\n51|32\n85|61\n85|67\n85|76\n85|25\n85|37\n85|33\n85|36\n85|32\n85|23\n85|97\n85|43\n85|63\n85|38\n85|35\n85|13\n85|48\n85|29\n85|44\n85|64\n85|82\n85|65\n85|42\n85|54\n85|71\n81|82\n81|72\n81|52\n81|87\n81|91\n81|15\n81|14\n81|83\n81|92\n81|22\n81|78\n81|68\n81|77\n81|18\n81|24\n81|67\n81|51\n81|85\n81|64\n81|99\n81|88\n81|55\n81|61\n81|21\n63|29\n63|44\n63|38\n63|89\n63|36\n63|48\n63|25\n63|33\n63|96\n63|17\n63|81\n63|32\n63|43\n63|42\n63|35\n63|37\n63|13\n63|76\n63|56\n63|97\n63|54\n63|65\n63|71\n63|23\n37|22\n37|56\n37|99\n37|36\n37|33\n37|78\n37|92\n37|23\n37|52\n37|14\n37|24\n37|55\n37|13\n37|48\n37|25\n37|81\n37|89\n37|83\n37|21\n37|96\n37|15\n37|17\n37|88\n37|51\n15|67\n15|61\n15|29\n15|77\n15|76\n15|68\n15|97\n15|71\n15|85\n15|32\n15|64\n15|63\n15|54\n15|35\n15|87\n15|91\n15|38\n15|43\n15|78\n15|42\n15|44\n15|82\n15|18\n15|72\n82|71\n82|54\n82|36\n82|65\n82|61\n82|63\n82|35\n82|96\n82|32\n82|33\n82|48\n82|76\n82|97\n82|56\n82|29\n82|43\n82|89\n82|23\n82|38\n82|25\n82|42\n82|37\n82|44\n82|13\n88|42\n88|78\n88|71\n88|15\n88|44\n88|54\n88|51\n88|85\n88|97\n88|43\n88|72\n88|91\n88|76\n88|87\n88|18\n88|64\n88|82\n88|63\n88|77\n88|38\n88|67\n88|68\n88|55\n88|61\n14|85\n14|77\n14|68\n14|87\n14|55\n14|67\n14|44\n14|99\n14|22\n14|91\n14|92\n14|61\n14|38\n14|64\n14|71\n14|15\n14|72\n14|52\n14|51\n14|82\n14|63\n14|78\n14|88\n14|18\n18|65\n18|64\n18|71\n18|38\n18|33\n18|63\n18|43\n18|61\n18|67\n18|91\n18|37\n18|13\n18|82\n18|29\n18|48\n18|97\n18|44\n18|42\n18|23\n18|35\n18|85\n18|54\n18|76\n18|32\n77|54\n77|68\n77|97\n77|63\n77|67\n77|85\n77|37\n77|42\n77|38\n77|61\n77|72\n77|18\n77|65\n77|29\n77|44\n77|35\n77|91\n77|82\n77|43\n77|71\n77|32\n77|76\n77|87\n77|64\n44|38\n44|35\n44|25\n44|36\n44|29\n44|33\n44|89\n44|76\n44|56\n44|37\n44|23\n44|48\n44|96\n44|65\n44|97\n44|43\n44|54\n44|71\n44|17\n44|21\n44|81\n44|42\n44|32\n44|13\n21|61\n21|22\n21|14\n21|82\n21|72\n21|92\n21|91\n21|18\n21|15\n21|24\n21|87\n21|67\n21|83\n21|55\n21|85\n21|99\n21|77\n21|63\n21|68\n21|51\n21|88\n21|64\n21|52\n21|78\n87|37\n87|65\n87|64\n87|48\n87|67\n87|91\n87|33\n87|82\n87|29\n87|63\n87|54\n87|85\n87|42\n87|61\n87|76\n87|38\n87|97\n87|44\n87|35\n87|43\n87|32\n87|18\n87|13\n87|71\n89|87\n89|81\n89|92\n89|78\n89|15\n89|88\n89|64\n89|91\n89|17\n89|68\n89|24\n89|72\n89|77\n89|99\n89|55\n89|83\n89|22\n89|18\n89|14\n89|52\n89|21\n89|85\n89|51\n89|67\n61|63\n61|97\n61|33\n61|23\n61|65\n61|17\n61|35\n61|13\n61|56\n61|71\n61|44\n61|96\n61|42\n61|38\n61|37\n61|29\n61|76\n61|48\n61|32\n61|54\n61|36\n61|43\n61|89\n61|25\n91|65\n91|67\n91|44\n91|13\n91|76\n91|32\n91|61\n91|82\n91|63\n91|85\n91|29\n91|43\n91|36\n91|64\n91|48\n91|71\n91|38\n91|37\n91|33\n91|42\n91|97\n91|35\n91|23\n91|54\n68|87\n68|65\n68|63\n68|91\n68|38\n68|37\n68|61\n68|35\n68|54\n68|32\n68|82\n68|97\n68|18\n68|71\n68|13\n68|72\n68|64\n68|85\n68|44\n68|42\n68|29\n68|76\n68|43\n68|67\n99|91\n99|15\n99|38\n99|55\n99|72\n99|64\n99|77\n99|18\n99|97\n99|54\n99|76\n99|61\n99|78\n99|44\n99|71\n99|68\n99|82\n99|43\n99|51\n99|88\n99|85\n99|63\n99|67\n99|87\n13|15\n13|14\n13|99\n13|89\n13|17\n13|21\n13|25\n13|51\n13|56\n13|33\n13|48\n13|36\n13|78\n13|83\n13|77\n13|81\n13|24\n13|52\n13|88\n13|23\n13|22\n13|55\n13|92\n13|96\n24|18\n24|87\n24|77\n24|92\n24|52\n24|14\n24|44\n24|61\n24|22\n24|71\n24|82\n24|72\n24|78\n24|68\n24|64\n24|63\n24|51\n24|67\n24|88\n24|99\n24|15\n24|85\n24|91\n38|43\n38|65\n38|54\n38|42\n38|23\n38|33\n38|76\n38|83\n38|96\n38|25\n38|37\n38|48\n38|35\n38|81\n38|56\n38|97\n38|29\n38|13\n38|36\n38|89\n38|24\n38|17\n48|33\n48|83\n48|23\n48|78\n48|55\n48|81\n48|22\n48|77\n48|89\n48|25\n48|24\n48|21\n48|99\n48|36\n48|17\n48|96\n48|68\n48|56\n48|52\n48|15\n48|88\n78|68\n78|72\n78|77\n78|43\n78|64\n78|38\n78|61\n78|97\n78|71\n78|76\n78|42\n78|32\n78|85\n78|65\n78|91\n78|63\n78|82\n78|18\n78|67\n78|29\n72|32\n72|67\n72|97\n72|64\n72|61\n72|13\n72|42\n72|85\n72|76\n72|71\n72|91\n72|35\n72|18\n72|54\n72|48\n72|63\n72|43\n72|38\n72|44\n23|96\n23|68\n23|92\n23|99\n23|22\n23|14\n23|89\n23|72\n23|77\n23|17\n23|24\n23|55\n23|52\n23|15\n23|78\n23|88\n23|36\n23|21\n25|72\n25|51\n25|52\n25|21\n25|92\n25|78\n25|87\n25|91\n25|24\n25|88\n25|96\n25|83\n25|99\n25|81\n25|68\n25|89\n25|56\n54|83\n54|22\n54|81\n54|42\n54|48\n54|92\n54|24\n54|25\n54|13\n54|35\n54|52\n54|37\n54|32\n54|14\n54|23\n54|17\n56|68\n56|24\n56|99\n56|72\n56|15\n56|55\n56|51\n56|18\n56|21\n56|91\n56|87\n56|92\n56|83\n56|89\n56|96\n33|56\n33|99\n33|96\n33|52\n33|81\n33|88\n33|15\n33|36\n33|68\n33|77\n33|17\n33|51\n33|24\n33|21\n96|72\n96|52\n96|67\n96|51\n96|85\n96|81\n96|89\n96|87\n96|18\n96|17\n96|22\n96|15\n96|99\n97|42\n97|29\n97|14\n97|36\n97|81\n97|32\n97|23\n97|21\n97|35\n97|76\n97|24\n97|25\n35|65\n35|22\n35|99\n35|37\n35|13\n35|96\n35|81\n35|36\n35|14\n35|48\n35|83\n52|92\n52|15\n52|78\n52|63\n52|67\n52|22\n52|72\n52|38\n52|87\n52|77\n22|92\n22|78\n22|99\n22|82\n22|44\n22|67\n22|77\n22|38\n22|55\n29|55\n29|92\n29|56\n29|88\n29|22\n29|83\n29|25\n29|37\n65|14\n65|99\n65|88\n65|13\n65|51\n65|96\n65|33\n36|81\n36|87\n36|25\n36|15\n36|22\n36|18\n32|36\n32|48\n32|89\n32|23\n32|52\n64|82\n64|63\n64|61\n64|35\n55|32\n55|42\n55|82\n43|81\n43|29\n92|67\n"
	rulesSplit := strings.Split(rulesInput, "\n")
	rules := make([][]string, len(rulesSplit)-1)
	for i, rule := range rulesSplit {
		ruleSplit := strings.Split(rule, "|")
		if len(ruleSplit) == 2 {
			rules[i] = ruleSplit
		}
	}
	updatesInput := "42,54,21,36,22,33,13,29,35\n83,67,22,14,78,99,18,92,15,77,52,68,82,55,21,61,85,91,51,64,72,24,88\n85,67,64,82,61,63,44,71,38,97,43,54,42,32,29,35,65,37,13,48,33,23,36\n96,81,21,14,52,99,88,55,51,15,77,68,72,18,85\n63,52,77,85,91,83,22,61,14,64,82,68,51,24,55\n63,97,76,32,29,35,13,48,33,36,25,56,96,89,17\n15,99,51,88,21,83,72,56,81,18,92,52,55,17,89,96,87\n92,22,17,96,78,87,72,14,24,55,81,91,52,83,68,88,18,99,56\n87,18,61,67,64,76,72,85,97,65,91,68,32,44,29,43,37\n87,63,72,64,85,38,43,78,76,82,77,67,88,54,55\n51,77,87,85,67,61,63,44,97\n35,65,37,13,48,36,25,56,81,24,22,92,88\n85,29,32,42,35,87,43,13,63,37,71,72,82,76,91\n56,35,81,96,55,92,83\n54,68,67,77,61,18,63,76,82,55,97,15,42,91,51,38,85,43,72,87,71\n99,88,55,15,77,68,72,87,18,91,67,82,61,44,71,38,97,43,76\n14,17,81,91,55,22,21,87,64\n92,51,68,96,81,17,88,89,83,22,23,15,14,21,25,99,24,78,56,72,36,77,55\n68,87,18,85,82,44,71,43,76,54,42,32,29,35,37\n92,22,88,14,21,55,24,17,25,36,13,23,48\n92,25,18,68,88,51,17\n32,17,37,54,89,71,43,33,42,21,25\n33,36,25,56,96,89,17,81,83,24,14,52,22,92,99,55,51,15,78,77,68\n61,63,44,71,38,43,76,54,42,32,65,13,48,33,36,56,89\n14,88,51,87,64,44,71\n14,92,88,51,15,77,68,87,71\n42,21,89,83,35,65,81,24,23,32,33,13,29,14,52,25,17\n17,83,14,22,92,55,51,15,78,77,18,91,85,67,64\n21,83,22,18,92,67,15,99,64,85,68,87,55,91,78,51,88,77,14,61,52\n64,15,77,85,92,61,88,83,78,22,18,72,68,52,82,91,87,63,14,99,55\n89,21,76,35,96,83,17,13,38,25,54\n77,68,91,85,64,82,44,38,65\n54,64,91,38,63,51,71,61,85,97,44,18,67,76,43,72,78,15,32\n51,87,52,85,72,14,83,24,68,15,21,17,92\n21,83,99,96,36,17,52,81,56,65,25,14,48,13,24,92,55,23,89\n76,42,29,48,33,36,25,56,96,89,17,81,83\n77,55,22,78,87,64,61,88,67,68,71,72,51,44,52,82,99,15,14\n37,33,85,54,44,76,38,23,13,42,36\n43,25,29,13,33,38,35,97,48,56,65,32,17,54,89,81,44,37,36,23,71\n81,92,88,78,68,91,85,67,82\n56,81,21,24,14,88,55,51,77,68,91\n97,29,65,33,17,83,24\n38,33,56,43,61,35,76,54,64,32,36\n63,44,71,38,43,76,54,42,37,13,48,23,36\n22,17,96,89,14,92,83,37,99,88,29,21,52,48,23,81,35,24,36,13,25\n77,61,18,87,72,51,38\n24,92,99,55,51,85,44\n64,82,77,35,38\n87,51,15,88,67,52,18,82,72,77,99,71,64,22,44\n99,88,51,15,78,72,87,18,85,67,64,61,63,71,76\n23,36,25,56,96,17,81,83,14,52,92,88,55,51,78,68,72\n52,92,99,15,78,77,68,72,87,91,85,64,82,61,44,71,38\n13,23,17,14,99,55,78\n25,17,35,37,44,54,71,81,56,65,32\n38,64,55,52,87,77,71,99,88,68,18\n71,38,97,76,54,42,32,29,35,65,13,33,23,36,25,56,96,89,17,81,21\n82,91,52,83,21,18,14,77,85,61,92,64,88,51,68,99,78,22,24\n29,35,13,33,25,56,96,89,17,21,83,24,14,52,22,92,88\n91,61,14,88,18,15,55,99,82,77,64,92,78,87,71,68,51,85,72\n13,36,35,32,38,76,63,82,37,43,65,42,54,48,64,29,56,97,33\n61,88,71,68,92,55,77,63,67,51,38\n18,85,88,63,77,52,38,61,64\n89,83,99,88,55,15,78,77,68,72,87,18,91,85,67\n13,17,35,89,48,33,43,54,21,23,38,83,76\n36,25,56,96,89,17,81,21,83,24,14,52,22,92,99,88,51,15,78,77,68,72,87\n24,52,22,55,51,15,78,72,87,64,82,61,44\n55,15,78,87,18,85,63,71,38,97,54\n37,44,61,32,85,76,71,68,87\n23,65,89,56,33,21,37,22,48,17,96,25,92\n24,14,52,92,99,88,55,51,15,72,87,18,91,61,63\n24,14,22,92,99,88,51,15,78,68,72,87,18,85,64,82,61,63,44\n64,44,97,43,76,54,42,35,37,13,33,36,56\n15,87,91,67,82,61,97\n63,18,32,76,67,82,15,64,91,72,85,68,54,43,42,71,61,87,97,44,38,78,29\n48,33,25,56,96,89,81,21,14,52,22,92,99,88,55,51,15,78,77\n89,17,81,83,52,88,15,78,77,72,87\n51,55,92,77,88,72,68,24,87,89,85,99,52,14,83,81,21,91,15,17,22,18,96\n76,35,33,13,14,42,81,43,23,29,89,24,21,96,17,37,32,25,65\n89,25,13,56,78,15,92,48,17,23,88,99,14,51,52\n21,83,54,33,35,25,13,22,48,37,56,14,36,89,42\n61,71,29,37,13\n96,17,24,14,22,92,88,51,77,72,85\n99,88,55,51,77,68,72,87,18,91,85,82,61,63,71,38,97,43,76\n65,35,42,32,13,17,25,83,33,23,54,14,24\n76,54,87,72,61,18,97,91,44,42,65,85,82,71,77,35,29\n91,87,92,78,21,52,18,24,68,85,77,15,81,83,22,64,72,51,99,82,14,67,88\n43,32,35,37,13,96,17\n33,36,96,21,24,14,52,22,92\n77,83,92,85,81,91,21,68,24,64,82\n61,71,48,63,44,32,42,65,37,56,96,43,35,76,29,23,38\n44,71,38,54,32,35,13,33,23,56,96\n23,17,81,21,83,24,92,99,88,55,51,15,78,77,72\n42,33,61,67,23,64,25,65,82\n81,13,48,22,29,23,35,14,21,92,89\n33,23,36,25,56,96,17,81,21,83,24,14,52,22,92,99,88,55,51,15,78,77,68\n32,29,35,65,37,48,23,36,56,96,89,17,81,21,83,24,52,22,99\n65,37,13,25,96,89,17,21,92\n48,76,13,82,71,97,23,61,56,29,36,33,44,42,25,43,38,54,37,96,35\n21,99,61,87,68,22,88\n18,38,54,32,35,48,33\n97,63,55,78,15,77,68,87,61,18,38,51,71,91,88,99,92,22,44,85,82,67,64\n56,99,36,96,13\n56,25,43,76,23,33,64,29,36\n99,51,68,87,91,82,63,44,71,43,76\n82,54,85,91,29,64,33,61,42,37,97\n56,42,17,33,97,43,63\n77,17,21,99,52,85,15,91,78,88,14,67,51,24,92,22,64\n55,51,15,78,77,68,72,87,18,91,85,67,64,82,61,63,44,38,97,43,76,54,42\n87,78,67,18,42,61,55,82,91,71,85,97,15,72,43,76,63,44,64,38,54,77,51\n37,44,64,13,29,97,25,82,61,67,36,35,43,63,23\n33,23,25,56,96,89,17,21,83,14,52,22,92,99,88,51,78,77,68\n33,36,32,35,48,23,24,21,22,17,99,83,25,37,96,29,81,92,14,65,52\n76,32,71,42,33,82,97,36,54,44,35,13,29,43,37,63,48,96,65\n65,37,13,48,33,23,36,25,56,96,89,17,81,21,83,24,52,22,92,99,88,55,51\n42,32,29,35,37,13,48,23,36,56,96,21,83,14,52,22,92\n42,43,25,65,23,37,61,44,48,29,76,33,36,38,54,97,96,89,35\n52,99,55,51,78,18,64,82,63,71,38\n36,96,89,17,81,83,14,52,88,51,15,78,77\n96,81,51,15,99,37,24,36,13,17,33\n21,83,24,14,52,99,88,55,51,15,68,72,91,85,67,64,61\n25,51,81,22,99,56,18,52,78,14,87,92,15,77,68,83,55\n81,77,92,21,51,15,99,96,56\n71,43,65,82,54,42,13,36,25,61,23,33,35,63,67,38,76,97,37,32,29\n37,76,63,61,96,56,25,35,13,36,43,29,82,32,48,33,97\n35,52,23,14,96,42,89,21,81,83,76\n48,23,36,25,56,96,89,17,81,21,83,24,14,52,22,92,99,88,55,51,15,78,77\n44,61,85,92,91,77,15,64,51\n37,13,48,33,23,25,56,81,83,52,92,51,15\n56,78,96,88,92,36,23,17,25,52,48,99,24,89,55,21,15,81,51\n64,22,67,55,97,72,15,18,68,38,88\n85,64,68,44,54,87,76,91,82,63,88\n85,38,78,82,18,87,91,32,77,43,76,72,15,42,51\n22,92,88,72,87,91,67,82,61,44,97\n55,18,54,38,87,88,85,15,76\n83,24,14,52,22,92,88,55,51,15,78,77,68,72,18,91,85,67,64,61,63\n42,32,35,65,37,13,48,33,23,36,25,56,96,89,21,83,24,14,52,22,92\n32,17,29,83,48,14,21,25,52,42,96,33,37,65,76\n35,89,81,14,32,83,29,65,52,25,92,13,22,36,33,48,37,42,24\n81,42,35,36,89,54,71,25,32,43,76,37,38,44,65,23,17,33,56\n21,18,87,52,22,56,51,15,77,92,25,55,72,99,78,96,14,83,24\n56,25,37,81,38,89,21,43,65,83,33,36,35,96,48,42,29\n55,15,77,68,87,18,91,85,61,44,38,97,43,76,42\n22,99,72,83,67,52,61,21,68,14,87,18,77,51,64\n92,55,85,14,22,17,52,89,78\n88,68,18,14,81,22,91,52,83,99,72\n36,17,29,83,96,65,54,89,43,35,56,23,25,13,81,76,14\n88,51,78,63,43,76,54\n91,67,82,61,38,97,43,76,54,42,32,29,35,13,48,33,23\n67,63,35,71,54,68,37\n85,35,33,32,61,76,65,54,37,67,91,42,97,48,71,82,38,29,13,44,43\n77,15,81,89,96,25,14,92,78,22,51,24,21,83,56,18,88,99,68\n23,36,25,22,92,15,72\n23,25,54,36,65,17,14,76,56,96,35,48,81,24,37,21,89\n85,64,61,38,32,29,65\n56,89,17,24,14,92,99,55,78,18,91\n18,85,61,63,44,71,38,48,33\n81,21,14,52,92,88,72,67,82\n55,51,15,78,77,64,63,44,38,43,76,54,42\n76,54,48,23,96,81,83,24,52\n21,83,13,14,22,96,25,37,56,81,36,92,42,89,23,32,24,33,52,35,17\n42,13,91,38,43,82,35,18,87,29,37,85,64,67,54,32,63,76,72,61,44\n23,22,29,21,24,36,14,99,89,56,88\n77,56,15,33,48,24,81,22,92\n78,87,85,67,44,71,97,29,35\n61,15,78,63,77,71,44,68,91,87,32,85,72,43,76,82,29,97,42,54,18,38,67\n99,18,81,82,87,24,78,51,83\n54,65,48,36,14,52,22\n63,44,38,97,54,42,32,65,37,56,96,89,17\n83,88,68,72,81,52,55,36,25,22,17,92,87\n44,38,97,54,42,37,13,33,23,36,81\n61,18,67,64,38,35,65,85,68,29,37,63,71,42,91,82,97\n65,54,23,35,89,43,29,38,36,76,81,21,32,17,56,71,42\n96,78,55,91,17,77,85\n64,82,61,44,38,97,43,42,32,35,65,37,48,33,23\n23,36,25,56,89,17,81,21,83,14,52,22,92,99,88,55,51,15,78,68,72\n97,43,54,42,32,29,35,37,13,48,33,23,56,96,89,17,21,83,24\n54,65,36,23,71\n13,44,33,63,48,97,25,38,64,82,61,56,76,42,54,65,71,43,23,35,36,37,32\n65,13,48,23,36,56,89,21,52,22,88,55,51\n68,51,14,83,64,18,77,17,91\n76,37,38,25,13,33,71,21,42\n21,92,81,87,24,56,51\n48,83,35,37,81,97,89,54,33,29,36,13,96,23,38,21,65,17,76,56,32,43,25\n13,48,17,83,14,15,78\n18,22,92,82,68,87,24,52,44,99,67\n77,99,87,92,22,51,52,68,71,14,82\n22,67,83,63,14,15,82\n64,44,97,61,67,32,37,65,38,29,35,48,71,36,54,76,85\n24,14,92,99,15,78,87\n63,71,76,54,32,29,35,65,37,13,48,33,23,36,25,56,96,89,17\n42,96,71,35,25,65,23,33,44,81,32,97,29,76,13,54,43,56,17\n87,91,67,82,44,71,38,97,43,76,29,35,65,37,48\n33,38,13,48,65,43,61,82,37,76,54,32,35,44,67,29,85\n24,52,22,92,55,51,78,68,72,18,91,85,64,82,44\n63,48,85,67,38\n42,32,35,65,13,48,33,36,25,89,17,81,14\n63,44,71,43,35,65,37,13,23,36,17\n25,21,97,33,54,32,76,42,37,17,35,65,89,81,83,96,36,23,48,43,13,38,29\n42,32,29,35,65,37,33,25,56,89,17,21,24,14,52,22,92\n37,48,81,21,83,14,22,88,55,51,15\n55,51,77,68,87,18,91,85,67,82,63,44,38,97,54\n35,65,13,33,36\n61,48,44,64,43,36,82,42,56,29,23,54,33\n92,99,88,55,15,78,77,68,72,18,91,67,64,82,61,63,44,71,38,97,43\n32,29,33,23,96,83,22,92,99\n63,55,61,92,87,64,88,85,72\n67,92,77,64,52,51,81,91,17,85,21,22,14,78,15,88,18,72,83,55,68\n36,78,92,22,51,87,99\n37,13,36,56,81,92,88,55,15\n29,35,37,13,48,33,23,25,56,96,89,17,81,21,83,24,52,22,92,99,88\n"
	middlePageNumberSum := 0
	updates := strings.Split(updatesInput, "\n")
	var malformedUpdates [][]string
	for _, update := range updates {
		if update == "" {
			continue
		}
		updateList := strings.Split(update, ",")
		passesAllRules := true
		for _, rule := range rules {
			if !passesRule(rule[0], rule[1], updateList) {
				passesAllRules = false
			}
		}
		if !passesAllRules {
			malformedUpdates = append(malformedUpdates, updateList)
			continue
		}
		middlePageIndex := int(math.Floor(float64(len(updateList)) / 2.0))
		middlePageNumber, _ := strconv.Atoi(updateList[middlePageIndex])
		middlePageNumberSum += middlePageNumber
	}
	println(middlePageNumberSum)
	middlePageNumberSum = 0

	for i := 0; i < len(malformedUpdates); i++ {
		update := malformedUpdates[i]
		requiredUpdate := false
		for _, rule := range rules {
			if !passesRule(rule[0], rule[1], update) {
				update = moveElement(update, indexOf(rule[0], update), indexOf(rule[1], update))
				requiredUpdate = true
			}
		}
		if requiredUpdate {
			i -= 1
			continue
		}
		middlePageIndex := int(math.Floor(float64(len(update)) / 2.0))
		middlePageNumber, _ := strconv.Atoi(update[middlePageIndex])
		middlePageNumberSum += middlePageNumber
	}
	println(middlePageNumberSum)
}

func moveElement(slice []string, sourceIndex int, destinationIndex int) []string {
	if sourceIndex < 0 || sourceIndex >= len(slice) || destinationIndex < 0 || destinationIndex > len(slice) {
		panic("indices out of range")
	}

	// Extract the element to move
	element := slice[sourceIndex]

	// Remove the element from the slice
	slice = append(slice[:sourceIndex], slice[sourceIndex+1:]...)

	// Adjust destinationIndex if it is after the sourceIndex
	if destinationIndex > sourceIndex {
		destinationIndex--
	}

	// Insert the element at the new position
	slice = append(slice[:destinationIndex], append([]string{element}, slice[destinationIndex:]...)...)

	return slice
}
